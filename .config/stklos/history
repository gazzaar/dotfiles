_HiStOrY_V2_
h
',h'
",help"
(first\040'fathy)
(type\040",help"\040for\040more\040information)
(",help")
:q
q
quit
:quit
:exit
;exit
;quit
help
,help
,quit
(load\040"simply.scsm")
(load\040"Simply.scsm")
(load\040Simply.scsm)
`(load\040"simply.scm")
`(load\040"simply.scm")'
`(load\040"simply.scm")'`
(load\040"simply.scm")'`
(load\040"Simply.scm")
(load\040Simply.scm)
(load\040"Simply.scm")
(bf\040'fathy)
(bl\040'HELLO)
,q
(bl\040'HELLO)
,q
(load\040"Simply.scm")
(bl\040'hello)
,q
(bl\040'hello)
(load\040"Simply.scm")
(bl\040'hello)
,q
(load\040"simply.scs")
(load\040"Simply.scs")
(load\040"Simply.scm")
(bf\040'hell)
(bl\040'hello(bl\040'hello)
(bl\040'hello)
(bl\040'hello)
(bl\040'hello)
(bl\040'hello)
(bl\040'hello)
(bl\040'hello)
(bl\040'hello)
clear
quit
,q
(load\040"Simply.scm")
(bl\040'hello)
(bl\040'hello)
(bl\040'hello)
,q
(load\040"Simply.scm")
(bl\040'hello)
(bl\040'hello)
,q
,q
(load\040'Simply.scm')(load\040'Simply.scm')
(load\040'Simply.scm')
(load\040"Simply.scm")
(load\040"Simply.scm")
(first\040'Fathy
(first\040'Fathy)
(load\040"Simply.scm")
(first\040'Fathy)
(first\040'Fathy)
(load\040"Simply.scm")
(first\040'Fathy)
,q
(load\040"Simply.scm")
(first\040'Fathy)
,q
(load\040"Simply.scm")
(bl\040'hello)
,q
(load\040"Simply.scm")
(bl\040'hello)
,q
(load\040"Simply.scm")
(bl\040'hello)
(load\040"Simply.scm")
(bl\040'hello)
(+\040(*\0402\0407)\040(-\0406\0408))
(+\040(*\0402\0407)\040(-\0406\0408))
(load\040"Simply.scm")
(bl\040'hello)
(bl\040'hello)
(+\040(*\0402\0407)\040(-\0406\0408))
(load\040"Simply.scm")
(bl\040'hello)
(+\040(*\0402\0407)\040(-\0406\0408))
(+\040(*\0402\0407)\040(-\0406\0408))
(+\040(*\0402\0407)\040(-\0406\0408))
(load\040"Simply.scm")
(bl\040'hello)
(+\040(*\0402\0407)\040(-\0406\0408))
(load\040"Simply.scm")
(bl\040'hello)
(+\040(*\0402\0407)\040(-\0406\0408))
(load\040"Simply.scm")
(bl\040'hello)
(+\040(*\0402\0407)\040(-\0406\0408))
(load\040"Simply.scm")
(bl\040'hello)
(+\040(*\0402\0407)\040(-\0406\0408))
(load\040"Simply.scm")
(bl\040'hello)
(+\040(*\0402\0407)\040(-\0406\0408))
(load\040"Simply.scm")
(bl\040'hello)
(+\040(*\0402\0407)\040(-\0406\0408))
(load\040"Simply.scm")
(bl\040'hello)
(+\040(*\0402\0407)\040(-\0406\0408))
(load\040"Simply.scm")
(bl\040'hello)
(+\040(*\0402\0407)\040(-\0406\0408))
(load\040"Simply.scm")
(bl\040'hello)
(+\040(*\0402\0407)\040(-\0406\0408))
(load\040"Simply.scm")
(bl\040'hello)
(+\040(*\0402\0407)\040(-\0406\0408))
(load\040"Simply.scm")
(bl\040'hello)
(+\040(*\0402\0407)\040(-\0406\0408))
(load\040"Simply.scm")
(bl\040'hello)
(+\040(*\0402\0407)\040(-\0406\0408))
(load\040"Simply.scm")
(bl\040'hello)
(+\040(*\0402\0407)\040(-\0406\0408))
(load\040"Simply.scm")
(bl\040'hello)
(+\040(*\0402\0407)\040(-\0406\0408))
(load\040"Simply.scm")
(bl\040'hello)
(+\040(*\0402\0407)\040(-\0406\0408))
(load\040"Simply.scm")
(bl\040'hello)
(+\040(*\0402\0407)\040(-\0406\0408))
(load\040"Simply.scm")
(bl\040'hello)
(+\040(*\0402\0407)\040(-\0406\0408))
(load\040"Simply.scm")
(bl\040'hello)
(+\040(*\0402\0407)\040(-\0406\0408))
(load\040"Simply.scm")
(bl\040'hello)
(+\040(*\0402\0407)\040(-\0406\0408))
(bl\040'hello)
(bl\040'hello)
,q
(load\040"Simply.scm")
(*\0404\0408)
(bl\040'hello)
,q
(load\040"Simply.scm")
(*\0404\0408)
(bl\040'hello)
,q
(load\040"Simply.scm")
(*\0404\0408)
(bl\040'hello)
(load\040"Simply.scm")
(*\0404\0408)
(bl\040'hello)
(load\040"Simply.scm")
(*\0404\0408)
(bl\040'hello)
(load\040"Simply.scm")
(*\0404\0408)
(bl\040'hello)
(load\040"Simply.scm")
(*\0404\0408)
(bl\040'hello)
(load\040"Simply.scm")
(*\0404\0408)
(bl\040'hello)
(load\040"Simply.scm")
(*\0404\0408)
(bl\040'hello)
(bl\040'hello)
(bl\040'hello)\040
(load\040"Simply.scm")
(*\0404\0408)
(bl\040'hello)\040
(load\040"Simply.scm")
(*\0404\0408)
(bl\040'hello)\040
(load\040"Simply.scm")
(*\0404\0408)
(bl\040'hello)\040
(load\040"Simply.scm")
(*\0404\0408)
(bl\040'hello)\040
(load\040"Simply.scm")
(*\0404\0408)
(bl\040'hello)\040
(load\040"Simply.scm")
(*\0404\0408)
(bl\040'hello)\040
(load\040"Simply.scm")
(*\0404\0408)
(bl\040'hello)\040
(load\040"Simply.scm")
(*\0404\0408)
(bl\040'hello)\040
(bl\040'hello)\040
(*\0404\0408)\040
(*\0404\0408)\040
(*\0404\0408)
(load\040"Simply.scm")
(*\0404\0408)
(bl\040'hello)\040
(*\0404\0408)
(bl\040'hello)
(load\040"Simply.scm")
(*\0404\0408)
(bl\040'hello)
(*\0404\0408)
(bl\040'hello)
(bl\040'hello)
(define\040(factorial\040n)
\040\040(if\040(=\040n\0400)
\040\040\040\040\040\0401
\040\040\040\040\040\040\040\040(*\040n\040(factorial\040(-\040n\0401)))
)
\040\040)
(display\040"factorial\040of\0405\040is\040:\040")
(display\040(factorial\0405))
(display\040(factorial\0405))
(display\040"factorial\040of\0405\040is\040:\040")
(newline)
(display\040"factorial\040of\0405\040is\040:\040")
(display\040(factorial\0405))
(newline)
(display\040(factorial\0405))
(newline)
(display\040(factorial\0405))
,q
(define\040(sum-from-one-to-n\040n)
\040\040(if\040(=\040n\0401)
\040\040\040\040\040\0401
\040\040\040\040\040\040\040\040(+\040n\040(sum-from-one-to-n\040(-\040n\0401)))
)
\040\040)
(load\040"Simply.scm")
define\040num\040(read)
(define\040num\040(read)\040)
(display\040num)
(display\040(sum-from-one-to-n\040num))
(display\040(sum-from-one-to-n\040num))
(define\040(factorial\040n)
\040\040(if\040(=\040n\0400)
\040\040\040\040\040\0401
\040\040\040\040\040\040\040\040(*\040n\040(factorial\040(-\040n\0401)))
)
\040\040)
(display\040(factorial\0405))
(newline)
,q
*
(*)
(/)
(+)
(load\040"Simply.scm")
(word\040'now\040'here)
(word\040'fathy\040'Elgazar)
(word\040'now\040'here)
(word\040'now\040'Here)
(word\040'now\040'here)
(se\040'fathy\040'sameh\040'elgazzar)
(first\040(first\040(bf\040'(I\040love\040you))))
(first\040(last\040(bl\040'(fathy\040sameh\040elgazzar))))
(last\040(bf\040'(fathy\040sameh\040elgazzar)))
(define\040(square\040x)\040(*\040x\040x))
(square\0403)
(define\040hello\040(-\0405\0402))
hello
hello
(hello)
(define\040hello\040(-\040x\040b))
(define\040(hello)\040(-\040x\040b))
(hello\0405\0402)
(define\040(hello\040x\040b)\040(-\040x\040b))
(hello\0405\0402)
(define\040(subtract\040x\040b)\040(-\040x\040b))
(subtract\0405\0402)
(define\040hello\040'hello)
hello
(define\040hello\040(bf\040'hello))
hello
(define\040hello\040(bl\040'hello))
hello
(*\0404\0408)
(bl\040'hello)
(define\040(factorial\040n)
\040\040(if\040(=\040n\0400)
\040\040\040\040\040\0401
\040\040\040\040\040\040\040\040(*\040n\040(factorial\040(-\040n\0401)))
)
\040\040)
(display\040"factorial\040of\0405\040is\040:\040")
(display\040(factorial\0405))
(newline)
(restart\0401)
(word\040'now\040'here)
(word\040'fathy\040'Elgazar)
(se\040'fathy\040'sameh\040'elgazzar)
(first\040(first\040(bf\040'(I\040love\040you))))
(first\040(last\040(bl\040'(fathy\040sameh\040elgazzar))))
(last\040(bf\040'(fathy\040sameh\040elgazzar)))
(define\040(square\040x)\040(*\040x\040x))
(square\0403)
(define\040hello\040(bl\040'hello))
(define\040(subtract\040x\040b)\040(-\040x\040b))
(subtract\0405\0402)
(*\0404\0408)
(bl\040'hello)
(define\040(factorial\040n)
\040\040(if\040(=\040n\0400)
\040\040\040\040\040\0401
\040\040\040\040\040\040\040\040(*\040n\040(factorial\040(-\040n\0401)))
)
\040\040)
(display\040"factorial\040of\0405\040is\040:\040")
(display\040(factorial\0405))
(newline)
(restart\0401)
(word\040'now\040'here)
(word\040'fathy\040'Elgazar)
(se\040'fathy\040'sameh\040'elgazzar)
(first\040(first\040(bf\040'(I\040love\040you))))
(first\040(last\040(bl\040'(fathy\040sameh\040elgazzar))))
(last\040(bf\040'(fathy\040sameh\040elgazzar)))
(define\040(square\040x)\040(*\040x\040x))
(square\0403)
(define\040hello\040(bl\040'hello))
(define\040(subtract\040x\040b)\040(-\040x\040b))
(subtract\0405\0402)
,q
(load\040"Simply.scm")
(*\0404\0408)
(bl\040'hello)
(define\040(factorial\040n)
\040\040(if\040(=\040n\0400)
\040\040\040\040\040\0401
\040\040\040\040\040\040\040\040(*\040n\040(factorial\040(-\040n\0401)))
)
\040\040)
(display\040"factorial\040of\0405\040is\040:\040")
(display\040(factorial\0405))
(newline)
(restart\0401)
(word\040'now\040'here)
(word\040'fathy\040'Elgazar)
(se\040'fathy\040'sameh\040'elgazzar)
(first\040(first\040(bf\040'(I\040love\040you))))
(first\040(last\040(bl\040'(fathy\040sameh\040elgazzar))))
(last\040(bf\040'(fathy\040sameh\040elgazzar)))
(define\040(square\040x)\040(*\040x\040x))
(square\0403)
(define\040hello\040(bl\040'hello))
(define\040(subtract\040x\040b)\040(-\040x\040b))
(subtract\0405\0402)
,q
(load\040"Simply.scm")
(*\0404\0408)
(bl\040'hello)
(define\040(factorial\040n)
\040\040(if\040(=\040n\0400)
\040\040\040\040\040\0401
\040\040\040\040\040\040\040\040(*\040n\040(factorial\040(-\040n\0401)))
)
\040\040)
(display\040"factorial\040of\0405\040is\040:\040")
(display\040(factorial\0405))
(newline)
(restart\0401)
(word\040'now\040'here)
(word\040'fathy\040'Elgazar)
(se\040'fathy\040'sameh\040'elgazzar)
(first\040(first\040(bf\040'(I\040love\040you))))
(first\040(last\040(bl\040'(fathy\040sameh\040elgazzar))))
(last\040(bf\040'(fathy\040sameh\040elgazzar)))
(define\040(square\040x)\040(*\040x\040x))
(square\0403)
(define\040hello\040(bl\040'hello))
(define\040(subtract\040x\040b)\040(-\040x\040b))
(subtract\0405\0402)
,q
(load\040"Simply.scm")
(*\0404\0408)
(bl\040'hello)
(define\040(factorial\040n)
\040\040(if\040(=\040n\0400)
\040\040\040\040\040\0401
\040\040\040\040\040\040\040\040(*\040n\040(factorial\040(-\040n\0401)))
)
\040\040)
(display\040"factorial\040of\0405\040is\040:\040")
(display\040(factorial\0405))
(newline)
(restart\0401)
(word\040'now\040'here)
(word\040'fathy\040'Elgazar)
(se\040'fathy\040'sameh\040'elgazzar)
(first\040(first\040(bf\040'(I\040love\040you))))
(first\040(last\040(bl\040'(fathy\040sameh\040elgazzar))))
(last\040(bf\040'(fathy\040sameh\040elgazzar)))
(define\040(square\040x)\040(*\040x\040x))
(square\0403)
(define\040hello\040(bl\040'hello))
(define\040(subtract\040x\040b)\040(-\040x\040b))
(subtract\0405\0402)
,q
(load\040"Simply.scm")
(*\0404\0408)
(bl\040'hello)
(define\040(factorial\040n)
\040\040(if\040(=\040n\0400)
\040\040\040\040\040\0401
\040\040\040\040\040\040\040\040(*\040n\040(factorial\040(-\040n\0401)))
)
\040\040)
(display\040"factorial\040of\0405\040is\040:\040")
(display\040(factorial\0405))
(newline)
(restart\0401)
(word\040'now\040'here)
(word\040'fathy\040'Elgazar)
(se\040'fathy\040'sameh\040'elgazzar)
(first\040(last\040(bl\040'(fathy\040sameh\040elgazzar))))
(last\040(bf\040'(fathy\040sameh\040elgazzar)))
(define\040(square\040x)\040(*\040x\040x))
(square\0403)
(define\040hello\040(bl\040'hello))
(define\040(subtract\040x\040b)\040(-\040x\040b))
(subtract\0405\0402)
,q
(load\040"Simply.scm")
(*\0404\0408)
(bl\040'hello)
(define\040(factorial\040n)
\040\040(if\040(=\040n\0400)
\040\040\040\040\040\0401
\040\040\040\040\040\040\040\040(*\040n\040(factorial\040(-\040n\0401)))
)
\040\040)
(display\040"factorial\040of\0405\040is\040:\040")
(display\040(factorial\0405))
(newline)
(restart\0401)
(word\040'now\040'here)
(word\040'fathy\040'Elgazar)
(se\040'fathy\040'sameh\040'elgazzar)
(first\040(last\040(bl\040'(fathy\040sameh\040elgazzar))))
(last\040(bf\040'(fathy\040sameh\040elgazzar)))
(define\040(square\040x)\040(*\040x\040x))
(square\0403)
(define\040hello\040(bl\040'hello))
(define\040(subtract\040x\040b)\040(-\040x\040b))
(subtract\0405\0402)
,q
(load\040"Simply.scm")
(subtract\0405\0402)
(define\040(subtract\040x\040b)\040(-\040x\040b))
(subtract\0405\0402)
(define\040(yes\040x)
(if\040(equal?\040'3))
(wd\040'true\040'yes)
\040\040)
,hellp
,help
,q
(load\040"Simply.scm")
(+\0402\040(-\0403\0404))
(*\040(+\0403\0405)\040(*\0402\0404))
(+\0402\040(-\0403\0404));\040a\040combination\040have\040elements\040that\040themself\040is\040combinations.
(+\040(*\0403\040(+\040(*\0402\0404)\040\040(+\0403\0405)))\040\040(+\040(-\04010\0407)\0406))
(+\040
(*\0403
\040\040\040(+\040(*\0402\0404)
(+\0403\0405)
))
\040\040)
(\040*\0402\040
)
(restart\0403)
(load\040"Simply.scm")
(restart\0401)
(newline)
(display\040"factorial\040of\0405\040is\040:\040")
(display\040(factorial\0405))
(newline)
(restart\0401)
(word\040'now\040'here)
(word\040'fathy\040'Elgazar)
(se\040'fathy\040'sameh\040'elgazzar)
(first\040(last\040(bl\040'(fathy\040sameh\040elgazzar))))
(last\040(bf\040'(fathy\040sameh\040elgazzar)))
(define\040(square\040x)\040(*\040x\040x))
(square\0403)
(define\040hello\040(bl\040'hello))
(define\040(subtract\040x\040b)\040(-\040x\040b))
(subtract\0405\0402)
(load\040"Simply.scm")
10
(+\0405\0403\0404)
(-\0409\0401)
(/\0406\0402)
(+\040(*\0402\0404)\040\040(-\0404\0406))
(define\040a\0403)
(define\040b\040(+\040a\0401))
(+\040a\040b\040(*\040a\040b))
(=\040a\040b)
(if\040(and\040(>\040b\040a)\040\040(<\040b\040(*\040a\040b)))
\040\040\040\040b
\040\040\040\040a)
(cond\040((=\040a\0404)\0406)
\040\040\040\040\040\040((=\040b\0404)\040\040(+\0406\0407\040a))
\040\040\040\040\040\040\040\040(else\04025)
(+\0402\040(if\040(>\040b\040a)\040b\040a))
(*\040(cond\040((>\040a\040b)\040a)
\040\040\040\040\040\040\040\040\040((<\040a\040b)\040b)
\040\040\040\040\040\040\040\040\040\040(else\040-1)
\040\040\040\040\040(+\040a\0401)
\040))
\040\040)
(cond\040((=\040a\0404)\0406)
\040\040\040\040\040\040((=\040b\0404)\040\040(+\0406\0407\040a))
\040\040(else\04025)\040
\040\040)
(cond\040((=\040a\0404)\0406)
\040\040\040\040\040\040((=\040b\0404)\040\040(+\0406\0407\040a))
\040\040(else\04025)\040
\040\040)
(cond\040((=\040a\0404)\0406)
\040\040\040\040\040\040((=\040b\0404)\040\040(+\0406\0407\040a))
\040\040(else\04025)\040
\040\040)
(+\0402\040(if\040(>\040b\040a)\040b\040a))
(+\0402\040(if\040(>\040b\040a)\040a\040b))
(+\0402\040(if\040(<\040b\040a)\040a\040b))
(*\040(cond\040((>\040a\040b)\040a)
\040\040\040\040\040\040\040\040\040((<\040a\040b)\040b)
\040(else\040-1)
\040(+\040a\0401)
\040))
(*\040(cond\040((>\040a\040b)\040a)
\040\040\040\040\040\040\040\040\040((<\040a\040b)b)
\040\040\040\040\040\040\040\040\040(else\040-1))
\040\040\040(+\040a\0401))
(+\0405\0404\040(-\0402\040(-3\040(+\0406\040(/\0404\0405)))))
(+\0405\0404\040(-\0402\040(-\0403\040(+\0406\040(/\0404\0405)))))
;\040Translate\040into\040prefix\040form\040
(+\0405\0404\040(-\0402\040(-\0403\040(+\0406\040(/\0404\0405)))))
(*\0403\040(-\040\0406\0402)\040(-\0402\0407))
(*\0403\040(-\040\0406\0402)\040(-\0402\0407))
(/\040(+\0405\0404\040(-\0402\040(-\0403\040(+\0406\040(/\0404\0405)))))\040(*\0403\040(-\040\0406\0402)\040\040(-\0402\0407))\040\040\040\040\040)
(+\0405\0404\040(-\0402\040(-\0403\040(+\0406\040(/\0404\0405)))))
(/\040(+\0405\0404\040(-\0402\040(-\0403\040(+\0406\040(/\0404\0405)))))\040(*\0403\040(-\040\0406\0402)\040\040(-\0402\0407))\040\040\040\040\040)
(/\040
\040\040(+\0405\0404\040
\040(-\0402\040
(-\0403\040
\040\040\040(+\0406\040
\040\040(/\0404\0405)))))\040
\040\040(*\0403\040
\040(-\040\0406\0402)
\040(-\0402\0407)))
(define\040sumSquare\040(a\040b\040c)
\040\040)
(define\040sumSquare\040(a\040b\040d)
\040\040)
(define\040sumSquare(a\040b\040d)
\040\040)
(define\040sumSquare(a\040b\040z)
\040\040)
,h
(define\040sumSquare(a\040b)
\040\040)
(define\040sumSquare(a\040b\040d)
(*\040a\040b\040d)
\040\040)
(define\040(sumSquare\040a\040b\040c)
(*\040a\040b\040c)
\040\040)
(sumSquare\0402\0403\0404)
(define\040(squre\040a\040b\040)
(*\040a\040b\040)
\040\040)
(define\040(squre\040a)
(*\040a\040a)
\040\040)
(define\040(sumSqure\040b)
(+\040(square\040b)\040(square\040b))
\040\040)
(sumSquare\0405)
(define\040(sumSquare\040b)
(+\040(square\040b)\040(square\040b))
\040\040)
(sumSquare\0405)
(define\040(sumSquare\040b\040c)
(+\040(square\040b)\040(square\040c))
\040\040)
(sumSquare\0405\0405)
(sumSquare\0405\0403)
\040(define\040(sumOfLargestTwoSquared\040x\040y\040z)\040
\040\040\040(cond\040((and\040(>=\040(+\040x\040y)\040\040(+\040y\040z))\040\040(>=\040(+\040x\040y)\040\040(+\040x\040z)))\040\040(sumSquare\040x\040y))\040
\040\040\040\040\040\040\040\040\040((and\040(>=\040(+\040x\040z)\040\040(+\040y\040z))\040\040(>=\040(+\040x\040z)\040\040(+\040x\040y)))\040\040(sumSquare\040x\040z))\040
\040\040\040\040\040\040\040\040\040\040(else\040(sumSquare\040y\040z))))\040
(sumOfLargestTwoSquared\0403\0404\0406)
(sumOfLargestTwoSquared\0401\0402\0403)
(sumOfLargestTwoSquared\0401\0404\0405)
(sumOfLargestTwoSquared\0403\0404\0406)
(sumOfLargestTwoSquared\0401\0404\0405)
(sumOfLargestTwoSquared\0402\0403\0404)
(sumOfLargestTwoSquared\0403\0402\0404)
(sumOfLargestTwoSquared\0403\0404\0402)
(sumOfLargestTwoSquared\0402\0403\0404)
(define\040(SumSquareOfLargerNumbers\040x\040y\040z)
(cond\040(and\040(>=\040(+\040x\040y)\040(+\040x\040z))\040(>=\040(+\040x\040y)\040(+\040y\040z)))\040(square\040y\040x))
(cond\040(and\040(>=\040(+\040z\040y)\040(+\040z\040x))\040(>=\040(+\040z\040y)\040(+\040y\040x)))\040(square\040z\040y))
(else\040(square\040x\040z))
\040\040)
(SumSquareOfLargerNumbers\0402\0403\0404)
(define\040(SumSquareOfLargerNumbers\040x\040y\040z)
(cond\040(and\040(>=\040(+\040x\040y)\040(+\040x\040z))\040(>=\040(+\040x\040y)\040(+\040y\040z)))\040(square\040y\040x))
\040\040\040\040\040((and\040(>=\040(+\040z\040y)\040(+\040z\040x))\040(>=\040(+\040z\040y)\040(+\040y\040x)))\040(square\040z\040y))
(else\040(square\040x\040z))
\040\040)
(SumSquareOfLargerNumbers\0402\0403\0404)
(define\040(SumSquareOfLargerNumbers\040x\040y\040z)
(cond\040(and\040(>=\040(+\040x\040y)\040(+\040x\040z))\040(>=\040(+\040x\040y)\040(+\040y\040z)))\040(square\040y\040x))
\040\040((and\040(>=\040(+\040z\040y)\040(+\040z\040x))\040(>=\040(+\040z\040y)\040(+\040y\040x)))\040(square\040z\040y))
\040\040\040\040\040\040(else\040(square\040x\040z))
\040\040)
(SumSquareOfLargerNumbers\0402\0403\0404)
(define\040(SumSquareOfLargerNumbers\040x\040y\040z)
(cond\040(and\040(>=\040(+\040x\040y)\040(+\040x\040z))\040(>=\040(+\040x\040y)\040(+\040y\040z)))\040(square\040y\040x)
\040\040((and\040(>=\040(+\040z\040y)\040\040(+\040z\040x))\040\040(>=\040(+\040z\040y)\040\040(+\040y\040x)))\040\040(square\040z\040y))
\040\040\040\040\040\040(else\040(square\040x\040z))
)
)
(SumSquareOfLargerNumbers\0402\0403\0404)
(define\040(SumSquareOfLargerNumbers\040x\040y\040z)
(cond\040((and\040(>=\040(+\040x\040y)\040(+\040x\040z))\040(>=\040(+\040x\040y)\040(+\040y\040z)))\040(square\040y\040x))\040
\040\040((and\040(>=\040(+\040z\040y)\040\040(+\040z\040x))\040\040(>=\040(+\040z\040y)\040\040(+\040y\040x)))\040\040(square\040z\040y))
\040\040\040\040\040\040(else\040(square\040x\040z))
)
)
(SumSquareOfLargerNumbers\0402\0403\0404)
(define\040(SumSquareOfLargerNumbers\040x\040y\040z)
(cond\040((and\040(>=\040(+\040x\040y)\040(+\040x\040z))\040(>=\040(+\040x\040y)\040(+\040y\040z)))\040(square\040y\040x))\040
\040\040((and\040(>=\040(+\040z\040y)\040\040(+\040z\040x))\040\040(>=\040(+\040z\040y)\040\040(+\040y\040x)))\040\040(square\040z\040y))
\040\040\040\040\040\040(else\040(square\040x\040z))))
(SumSquareOfLargerNumbers\0402\0403\0404)
(define\040(SumSquareOfLargerNumbers\040x\040y\040z)
(cond\040((and\040(>=\040(+\040x\040y)\040(+\040x\040z))\040(>=\040(+\040x\040y)\040(+\040y\040z)))\040(sumSquare\040y\040x))\040
\040\040((and\040(>=\040(+\040z\040y)\040\040(+\040z\040x))\040\040(>=\040(+\040z\040y)\040\040(+\040y\040x)))\040\040(sumSquare\040z\040y))
\040\040\040\040\040\040(else\040(square\040x\040z))))
(SumSquareOfLargerNumbers\0402\0403\0404)
(SumSquareOfLargerNumbers\0401\0402\0403)
(define\040(SumSquareOfTwoLargerNumbers\040x\040y\040z)
(cond\040((and\040(>=\040(+\040x\040y)\040(+\040x\040z))\040(>=\040(+\040x\040y)\040(+\040y\040z)))\040(sumSquare\040y\040x))\040
\040\040((and\040(>=\040(+\040z\040y)\040\040(+\040z\040x))\040\040(>=\040(+\040z\040y)\040\040(+\040y\040x)))\040\040(sumSquare\040z\040y))
\040\040\040\040\040\040(else\040(square\040x\040z))))
(SumSquareOfTwoLargerNumbers\0402\0403\0404)
(SumSquareOfTwoLargerNumbers\0401\0402\0403)
+\040-
-\0402
+\0402
-\0402
(-\0402)
(+\040-\0402)
(define\040(absolute\040a\040b)
((if\040(>\040b\0400)+\040-)a\040b))
(absolute\0402\0403)
(absolute\0402\040-4)
(absolute\0402\0400)
(absolute\040-2\0403)
(absolute\040-2\040-3)
q
,q
(load\040"Simply.scm")
(define\040(p)\040(p))
(define\040(test\040x\040y)
(if\040(=\040x\0400)
0
y))
(test\0400\040(p))
(test\0400\040(p))
(+\040(*\040(+\040(*\0402\0404)\040\040\040(+\0403\0405))))
(+\040(*\040(+\040(*\0402\0404)\040\040\040(+\0403\0405))))
,q
(load\040"Simply.scm")
(load\040"Simply.scm")
(*\0404\0408)
(bl\040'hello)
(define\040(factorial\040n)
\040\040(if\040(=\040n\0400)
\040\040\040\040\040\0401
\040\040\040\040\040\040\040\040(*\040n\040(factorial\040(-\040n\0401)))
)
\040\040)
(display\040"factorial\040of\0405\040is\040:\040")
(display\040(factorial\0405))
(newline)
(restart\0401)
(word\040'now\040'here)
(word\040'fathy\040'Elgazar)
(se\040'fathy\040'sameh\040'elgazzar)
(first\040(last\040(bl\040'(fathy\040sameh\040elgazzar))))
(last\040(bf\040'(fathy\040sameh\040elgazzar)))
(define\040(square\040x)\040(*\040x\040x))
(square\0403)
(define\040hello\040(bl\040'hello))
(define\040(subtract\040x\040b)\040(-\040x\040b))
(subtract\0405\0402)
(+\040(*\040(+\040(*\0402\0404)\040\040\040(+\0403\0405))))
clear
,q
(load\040"Simply.scm")
,q
(load\040"Simply.scm")
,q
(load\040"Simply.scm")
clear
quit
q
Quit
help
,help
q
,quit
(load\040"Simply.scm")
,q
(load\040"Simply.scm")
(load\040"Simply.scm")
(*\0404\0408)
,q
(display\040"factorial\040of\0405\040is\040:\040")
(display\040(factorial\0405))
(newline)
(define\040(factorial\040n)
\040\040(if\040(=\040n\0400)
\040\040\040\040\040\0401
\040\040\040\040\040\040\040\040(*\040n\040(factorial\040(-\040n\0401)))
)
\040\040)
(display\040"factorial\040of\0405\040is\040:\040")
(display\040(factorial\0405))
(display\040"factorial\040of\0405\040is\040:\040")
(display\040(factorial\0405))
(newline)
(display\040(factorial\0405))
(diplay\040(factorial\0405))
(display\040(factorial\0405))
(display\040(factorial\0405))
(word\040'fathy\040'Elgazzar)
(load\040"Simply.scm")
(word\040'now\040'here)
(word\040'fathy\040'Elgazzar)
(se\040'fathy\040'sameh\040'elgazzar)
,q
(load\040"Simply.scm")
(*\0404\0408)
(define\040(square\040x)\040(*\040x\040x))
(square\0403)
(+\0402\040(-\0403\0404))
(*\040(+\0403\0405)\040(*\0402\0404))
(define\040(sum\040FN\040a\040b)
\040\040(if\040(>\040a\040b)
\040\040\040\040\040\0400
\040\040\040\040\040(+\040(FN\040a)\040(sum\040FN\040(+\040a\0401)\040b)\040)))
(define\040(sqr\040a)\040(*\040a\040a))
(sum\040(sqr\0402)\0404)
(sum\040sqr\0402\0404)
(sum\040sqr\0403\0405)
(sum\040sqr\0402\0404)
(define\040(qp\040a)\040(*\040a\040a\040a))
(sum\040qp\0403\0405)
,q
(load\040"Simply.scm")
(*\0404\0408)
,q
,q
(load\040"Simply.scm")
(bl\040'hello)
(+\0405\0403\0404)
,q
